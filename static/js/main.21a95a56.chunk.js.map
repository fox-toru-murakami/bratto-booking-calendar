{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BrattoPropertySystem","areas","properties","generateProperties","baseProperties","id","name","area","rooms","contractType","transactionType","propertyType","image","layout","floor","direction","additionalProperties","i","baseProperty","length","newId","parseInt","toString","push","reservations","setReservations","useState","reservationId","additionalReservations","forEach","property","Math","random","startDay","endDay","propertyId","startDate","String","padStart","endDate","type","selectedArea","setSelectedArea","selectedProperty","setSelectedProperty","setStartDate","setEndDate","currentMonth","setCurrentMonth","Date","showModal","setShowModal","selectedPropertyData","setSelectedPropertyData","showSelectionModal","setShowSelectionModal","selectionRange","setSelectionRange","useEffect","year","getFullYear","month","getMonth","firstDay","lastDay","formatDateForInput","date","getDate","formatDateForDisplay","dateString","days","getDaysInMonth","Array","from","_","day","weekday","getDay","filteredProperties","filter","formatDate","getCellStatus","dateStr","matchingReservations","res","getCellStyle","status","isStart","isStartDate","some","isEnd","isEndDate","style","backgroundColor","boxShadow","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","borderTopRightRadius","borderBottomRightRadius","borderRight","hasContinuingReservation","prevDate","setDate","prevDateStr","dragStart","setDragStart","currentDrag","setCurrentDrag","isDragging","setIsDragging","PropertyDetailModal","_ref","onClose","React","createElement","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","alt","SelectionModal","_ref2","range","onSubmit","find","p","color","href","fillRule","clipRule","value","onChange","e","target","map","key","goToPreviousMonth","newMonth","setMonth","goToNextMonth","areaProperties","propertyIndex","openPropertyModal","inDragSelection","isInDragSelection","dateValue","getTime","startValue","currentValue","min","max","onMouseDown","handleCellMouseDown","onMouseOver","handleCellMouseOver","onMouseUp","hasEvent","resStart","resEnd","handleCellMouseUp","closePropertyModal","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.21a95a56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst BrattoPropertySystem = () => {\n  // Sample data based on the screenshots\n  const areas = [\n    \"江坂エリア\", \"梅田エリア\", \"なんばエリア\", \"京橋エリア\", \"天王寺エリア\", \"新大阪エリア\", \"名古屋エリア\", \"京都エリア\"\n  ];\n  \n  // Generate more properties for each area\n  const generateProperties = () => {\n    const baseProperties = [\n      { \n        id: '202', \n        name: 'BraTTo名古屋Ⅱ', \n        area: '名古屋エリア', \n        rooms: ['202'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '2階',\n        direction: '東'\n      },\n      { \n        id: '301', \n        name: 'BraTTo京都河原町', \n        area: '京都エリア', \n        rooms: ['301'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1LDK',\n        floor: '3階',\n        direction: '南'\n      },\n      { \n        id: '305', \n        name: 'BraTTo大阪新町', \n        area: 'なんばエリア', \n        rooms: ['305'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '3階',\n        direction: '西'\n      },\n      { \n        id: '306', \n        name: 'BraTTo島丸施設駅前', \n        area: '京橋エリア', \n        rooms: ['306'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1LDK',\n        floor: '3階',\n        direction: '南'\n      },\n      { \n        id: '403', \n        name: 'BraTTo京都ステーション', \n        area: '京都エリア', \n        rooms: ['403'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '4階',\n        direction: '東'\n      },\n      { \n        id: '404', \n        name: 'BraTTo梅田新通', \n        area: '梅田エリア', \n        rooms: ['404'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1DK',\n        floor: '4階',\n        direction: '南'\n      },\n      { \n        id: '412', \n        name: 'BraTTo梅田山里', \n        area: '梅田エリア', \n        rooms: ['412'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '4階',\n        direction: '西'\n      },\n      { \n        id: '601', \n        name: 'BraTTo新梅田2', \n        area: '梅田エリア', \n        rooms: ['601'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1LDK',\n        floor: '6階',\n        direction: '南東'\n      },\n      { \n        id: '904', \n        name: 'BraTTo名古屋駅前', \n        area: '名古屋エリア', \n        rooms: ['904'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '9階',\n        direction: '南'\n      },\n      { \n        id: '906', \n        name: 'BraTTo心斎橋アネックス', \n        area: 'なんばエリア', \n        rooms: ['906'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1DK',\n        floor: '9階',\n        direction: '東'\n      },\n      { \n        id: '1001', \n        name: 'BraTTo天六駅前', \n        area: '天王寺エリア', \n        rooms: ['1001'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '10階',\n        direction: '南'\n      },\n      { \n        id: '1002', \n        name: 'BraTTo京都新京極', \n        area: '京都エリア', \n        rooms: ['1002'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1LDK',\n        floor: '10階',\n        direction: '東'\n      },\n      { \n        id: '1005', \n        name: 'BraTTo京都駅前', \n        area: '京都エリア', \n        rooms: ['1005'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1DK',\n        floor: '10階',\n        direction: '西'\n      },\n      { \n        id: '1009', \n        name: 'BraTTo新大阪', \n        area: '新大阪エリア', \n        rooms: ['1009'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1LDK',\n        floor: '10階',\n        direction: '南'\n      },\n      { \n        id: '1101', \n        name: 'BraTTo千種バルテラス', \n        area: '名古屋エリア', \n        rooms: ['1101'],\n        contractType: '定期借家契約',\n        transactionType: '仲介',\n        propertyType: 'マンション',\n        image: '/api/placeholder/400/300',\n        layout: '1K',\n        floor: '11階',\n        direction: '東'\n      }\n    ];\n    \n    // Generate additional properties\n    const additionalProperties = [];\n    for (let i = 0; i < 25; i++) {\n      const baseProperty = baseProperties[i % baseProperties.length];\n      const newId = (parseInt(baseProperty.id) + (i * 3) + 100).toString();\n      \n      additionalProperties.push({\n        ...baseProperty,\n        id: newId,\n        name: `${baseProperty.name}-${i + 1}`,\n      });\n    }\n    \n    return [...baseProperties, ...additionalProperties];\n  };\n  \n  const properties = generateProperties();\n\n  // Sample reservation data (for demonstration)\n  const [reservations, setReservations] = useState(() => {\n    const baseReservations = [\n      // Reservations - using lighter pink color rgb(255, 165, 165)\n      { id: 1, propertyId: '301', startDate: '2025-04-01', endDate: '2025-04-08', type: 'reservation' },\n      { id: 2, propertyId: '305', startDate: '2025-04-03', endDate: '2025-04-12', type: 'reservation' },\n      { id: 3, propertyId: '404', startDate: '2025-04-10', endDate: '2025-04-19', type: 'reservation' },\n      { id: 5, propertyId: '904', startDate: '2025-04-22', endDate: '2025-04-29', type: 'reservation' },\n      { id: 8, propertyId: '202', startDate: '2025-04-02', endDate: '2025-04-05', type: 'reservation' },\n      { id: 9, propertyId: '202', startDate: '2025-04-12', endDate: '2025-04-17', type: 'reservation' },\n      { id: 10, propertyId: '202', startDate: '2025-04-24', endDate: '2025-04-30', type: 'reservation' },\n      { id: 11, propertyId: '306', startDate: '2025-04-06', endDate: '2025-04-15', type: 'reservation' },\n      { id: 12, propertyId: '403', startDate: '2025-04-01', endDate: '2025-04-09', type: 'reservation' },\n      { id: 13, propertyId: '403', startDate: '2025-04-19', endDate: '2025-04-23', type: 'reservation' },\n      { id: 14, propertyId: '412', startDate: '2025-04-03', endDate: '2025-04-11', type: 'reservation' },\n      { id: 15, propertyId: '601', startDate: '2025-04-06', endDate: '2025-04-09', type: 'reservation' },\n      { id: 16, propertyId: '601', startDate: '2025-04-21', endDate: '2025-04-29', type: 'reservation' },\n      { id: 17, propertyId: '906', startDate: '2025-04-08', endDate: '2025-04-14', type: 'reservation' },\n      { id: 18, propertyId: '1001', startDate: '2025-04-03', endDate: '2025-04-07', type: 'reservation' },\n      { id: 19, propertyId: '1001', startDate: '2025-04-17', endDate: '2025-04-25', type: 'reservation' },\n      { id: 20, propertyId: '1005', startDate: '2025-04-09', endDate: '2025-04-15', type: 'reservation' },\n      { id: 21, propertyId: '1005', startDate: '2025-04-23', endDate: '2025-04-29', type: 'reservation' },\n      { id: 22, propertyId: '1009', startDate: '2025-04-04', endDate: '2025-04-10', type: 'reservation' },\n      { id: 23, propertyId: '1009', startDate: '2025-04-21', endDate: '2025-04-29', type: 'reservation' },\n      \n      // Cleanings (single day events) - More realistic timing\n      // Some before reservation (day before)\n      { id: 4, propertyId: '601', startDate: '2025-04-05', endDate: '2025-04-05', type: 'cleaning' }, // Before reservation on 4/6\n      { id: 24, propertyId: '202', startDate: '2025-04-01', endDate: '2025-04-01', type: 'cleaning' }, // Before reservation on 4/2\n      { id: 33, propertyId: '906', startDate: '2025-04-07', endDate: '2025-04-07', type: 'cleaning' }, // Before reservation on 4/8\n      { id: 34, propertyId: '1001', startDate: '2025-04-02', endDate: '2025-04-02', type: 'cleaning' }, // Before reservation on 4/3\n      \n      // Some cleanings 2-3 days before reservation\n      { id: 7, propertyId: '1009', startDate: '2025-04-01', endDate: '2025-04-01', type: 'cleaning' }, // 3 days before reservation on 4/4\n      { id: 25, propertyId: '202', startDate: '2025-04-09', endDate: '2025-04-09', type: 'cleaning' }, // 3 days before reservation on 4/12\n      { id: 26, propertyId: '202', startDate: '2025-04-21', endDate: '2025-04-21', type: 'cleaning' }, // 3 days before reservation on 4/24\n      { id: 28, propertyId: '306', startDate: '2025-04-03', endDate: '2025-04-03', type: 'cleaning' }, // 3 days before reservation on 4/6\n      { id: 36, propertyId: '1005', startDate: '2025-04-06', endDate: '2025-04-06', type: 'cleaning' }, // 3 days before reservation on 4/9\n      \n      // Some cleanings after reservations end (next day)\n      { id: 38, propertyId: '301', startDate: '2025-04-09', endDate: '2025-04-09', type: 'cleaning' }, // After reservation ends on 4/8\n      { id: 43, propertyId: '403', startDate: '2025-04-10', endDate: '2025-04-10', type: 'cleaning' }, // After reservation ends on 4/9\n      { id: 46, propertyId: '601', startDate: '2025-04-10', endDate: '2025-04-10', type: 'cleaning' }, // After reservation ends on 4/9\n      \n      // Some cleanings several days after reservations end\n      { id: 39, propertyId: '305', startDate: '2025-04-15', endDate: '2025-04-15', type: 'cleaning' }, // 3 days after reservation ends on 4/12\n      { id: 40, propertyId: '404', startDate: '2025-04-23', endDate: '2025-04-23', type: 'cleaning' }, // 4 days after reservation ends on 4/19\n      { id: 42, propertyId: '306', startDate: '2025-04-19', endDate: '2025-04-19', type: 'cleaning' }, // 4 days after reservation ends on 4/15\n      { id: 45, propertyId: '412', startDate: '2025-04-15', endDate: '2025-04-15', type: 'cleaning' }, // 4 days after reservation ends on 4/11\n      { id: 48, propertyId: '906', startDate: '2025-04-18', endDate: '2025-04-18', type: 'cleaning' }, // 4 days after reservation ends on 4/14\n      { id: 49, propertyId: '1001', startDate: '2025-04-11', endDate: '2025-04-11', type: 'cleaning' }, // 4 days after reservation ends on 4/7\n      { id: 51, propertyId: '1005', startDate: '2025-04-19', endDate: '2025-04-19', type: 'cleaning' }, // 4 days after reservation ends on 4/15\n      { id: 53, propertyId: '1009', startDate: '2025-04-15', endDate: '2025-04-15', type: 'cleaning' }, // 5 days after reservation ends on 4/10\n      \n      // Some cleanings scheduled far in advance for end-of-month reservations\n      { id: 32, propertyId: '904', startDate: '2025-04-20', endDate: '2025-04-20', type: 'cleaning' }, // Before reservation on 4/22\n      { id: 35, propertyId: '1001', startDate: '2025-04-16', endDate: '2025-04-16', type: 'cleaning' }, // Before reservation on 4/17\n      { id: 37, propertyId: '1005', startDate: '2025-04-21', endDate: '2025-04-21', type: 'cleaning' }, // Before reservation on 4/23\n      \n      // End of month cleanings for future use\n      { id: 41, propertyId: '904', startDate: '2025-04-30', endDate: '2025-04-30', type: 'cleaning' }, // Last day of month\n      { id: 47, propertyId: '601', startDate: '2025-04-30', endDate: '2025-04-30', type: 'cleaning' }, // Last day of month\n      { id: 52, propertyId: '1005', startDate: '2025-04-30', endDate: '2025-04-30', type: 'cleaning' }, // Last day of month\n      \n      // Room Blocks\n      { id: 6, propertyId: '1002', startDate: '2025-04-15', endDate: '2025-04-30', type: 'roomBlock' },\n      { id: 27, propertyId: '412', startDate: '2025-04-17', endDate: '2025-04-30', type: 'roomBlock' },\n      { id: 55, propertyId: '906', startDate: '2025-04-20', endDate: '2025-04-30', type: 'roomBlock' },\n      { id: 56, propertyId: '1101', startDate: '2025-04-07', endDate: '2025-04-18', type: 'roomBlock' },\n    ];\n    \n    // Generate additional reservations for additional properties\n    let reservationId = 100;\n    const additionalReservations = [];\n    \n    properties.forEach(property => {\n      if (parseInt(property.id) > 1101) {\n        // Add a reservation from beginning to mid-month\n        if (Math.random() > 0.3) {\n          const startDay = Math.floor(Math.random() * 5) + 1;\n          const endDay = Math.floor(Math.random() * 7) + startDay + 3;\n          \n          additionalReservations.push({\n            id: reservationId++,\n            propertyId: property.id,\n            startDate: `2025-04-${String(startDay).padStart(2, '0')}`,\n            endDate: `2025-04-${String(endDay).padStart(2, '0')}`,\n            type: 'reservation'\n          });\n          \n          // Add cleaning before this reservation\n          additionalReservations.push({\n            id: reservationId++,\n            propertyId: property.id,\n            startDate: `2025-04-${String(startDay - 1).padStart(2, '0')}`,\n            endDate: `2025-04-${String(startDay - 1).padStart(2, '0')}`,\n            type: 'cleaning'\n          });\n          \n          // Add cleaning after this reservation\n          additionalReservations.push({\n            id: reservationId++,\n            propertyId: property.id,\n            startDate: `2025-04-${String(endDay + 1).padStart(2, '0')}`,\n            endDate: `2025-04-${String(endDay + 1).padStart(2, '0')}`,\n            type: 'cleaning'\n          });\n        }\n        \n        // Add a reservation from mid to end of month\n        if (Math.random() > 0.4) {\n          const startDay = Math.floor(Math.random() * 5) + 15;\n          const endDay = Math.floor(Math.random() * 9) + startDay + 2;\n          if (endDay <= 30) {\n            additionalReservations.push({\n              id: reservationId++,\n              propertyId: property.id,\n              startDate: `2025-04-${String(startDay).padStart(2, '0')}`,\n              endDate: `2025-04-${String(endDay).padStart(2, '0')}`,\n              type: 'reservation'\n            });\n            \n            // Add cleaning before this reservation\n            additionalReservations.push({\n              id: reservationId++,\n              propertyId: property.id,\n              startDate: `2025-04-${String(startDay - 1).padStart(2, '0')}`,\n              endDate: `2025-04-${String(startDay - 1).padStart(2, '0')}`,\n              type: 'cleaning'\n            });\n            \n            if (endDay < 30) {\n              // Add cleaning after this reservation\n              additionalReservations.push({\n                id: reservationId++,\n                propertyId: property.id,\n                startDate: `2025-04-${String(endDay + 1).padStart(2, '0')}`,\n                endDate: `2025-04-${String(endDay + 1).padStart(2, '0')}`,\n                type: 'cleaning'\n              });\n            }\n          }\n        }\n        \n        // Occasionally add room block\n        if (Math.random() > 0.8) {\n          const startDay = Math.floor(Math.random() * 10) + 10;\n          \n          additionalReservations.push({\n            id: reservationId++,\n            propertyId: property.id,\n            startDate: `2025-04-${String(startDay).padStart(2, '0')}`,\n            endDate: '2025-04-30',\n            type: 'roomBlock'\n          });\n        }\n      }\n    });\n    \n    return [...baseReservations, ...additionalReservations];\n  });\n\n  // State for filters\n  const [selectedArea, setSelectedArea] = useState('すべて');\n  const [selectedProperty, setSelectedProperty] = useState('すべて');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // State for current month\n  const [currentMonth, setCurrentMonth] = useState(new Date(2025, 3)); // April 2025\n\n  // State for property detail modal\n  const [showModal, setShowModal] = useState(false);\n  const [selectedPropertyData, setSelectedPropertyData] = useState(null);\n  \n  // State for drag & drop selection modal\n  const [showSelectionModal, setShowSelectionModal] = useState(false);\n  const [selectionRange, setSelectionRange] = useState(null);\n\n  // Set default date range to current month\n  useEffect(() => {\n    const year = currentMonth.getFullYear();\n    const month = currentMonth.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    \n    setStartDate(formatDateForInput(firstDay));\n    setEndDate(formatDateForInput(lastDay));\n  }, [currentMonth]);\n\n  // Format date for input field (YYYY-MM-DD)\n  const formatDateForInput = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Format date for display (YYYY年MM月DD日)\n  const formatDateForDisplay = (dateString) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return `${year}年${month}月${day}日`;\n  };\n\n  // Navigate to previous month\n  const goToPreviousMonth = () => {\n    const newMonth = new Date(currentMonth);\n    newMonth.setMonth(newMonth.getMonth() - 1);\n    setCurrentMonth(newMonth);\n  };\n\n  // Navigate to next month\n  const goToNextMonth = () => {\n    const newMonth = new Date(currentMonth);\n    newMonth.setMonth(newMonth.getMonth() + 1);\n    setCurrentMonth(newMonth);\n  };\n\n  // Generate dates for the current month\n  const getDaysInMonth = () => {\n    const year = currentMonth.getFullYear();\n    const month = currentMonth.getMonth();\n    const days = new Date(year, month + 1, 0).getDate();\n    \n    return Array.from({ length: days }, (_, i) => {\n      const date = new Date(year, month, i + 1);\n      return {\n        date: date,\n        day: i + 1,\n        weekday: ['日', '月', '火', '水', '木', '金', '土'][date.getDay()]\n      };\n    });\n  };\n\n  const days = getDaysInMonth();\n\n  // Filter properties based on selected area\n  const filteredProperties = properties.filter(property => {\n    if (selectedArea === 'すべて') return true;\n    return property.area === selectedArea;\n  });\n\n  // Generate a formatted date string (YYYY-MM-DD)\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // Check if a cell has a reservation\n  const getCellStatus = (propertyId, date) => {\n    const dateStr = formatDate(date);\n    const matchingReservations = reservations.filter(res => {\n      return res.propertyId === propertyId && \n             res.startDate <= dateStr && \n             res.endDate >= dateStr;\n    });\n    \n    if (matchingReservations.length === 0) return null;\n    return matchingReservations[0];\n  };\n\n  // Check if date is the start of a reservation\n  const isStartDate = (propertyId, date) => {\n    const dateStr = formatDate(date);\n    return reservations.some(res => res.propertyId === propertyId && res.startDate === dateStr);\n  };\n\n  // Check if date is the end of a reservation\n  const isEndDate = (propertyId, date) => {\n    const dateStr = formatDate(date);\n    return reservations.some(res => res.propertyId === propertyId && res.endDate === dateStr);\n  };\n\n  // Check if date has a reservation continuing from previous day\n  const hasContinuingReservation = (propertyId, date) => {\n    const dateStr = formatDate(date);\n    const prevDate = new Date(date);\n    prevDate.setDate(prevDate.getDate() - 1);\n    const prevDateStr = formatDate(prevDate);\n    \n    return reservations.some(res => \n      res.propertyId === propertyId && \n      res.startDate <= prevDateStr && \n      res.endDate >= dateStr\n    );\n  };\n\n  // Get cell style based on reservation type\n  const getCellStyle = (propertyId, day) => {\n    const status = getCellStatus(propertyId, day.date);\n    if (!status) return {};\n    \n    const isStart = isStartDate(propertyId, day.date);\n    const isEnd = isEndDate(propertyId, day.date);\n    \n    let style = {};\n    \n    switch(status.type) {\n      case 'reservation':\n        style.backgroundColor = 'rgb(255, 165, 165)';  // Light pink\n        style.boxShadow = '0 1px 3px rgba(255, 105, 105, 0.3)';\n        break;\n      case 'cleaning':\n        style.backgroundColor = 'rgb(200, 255, 200)';  // Light green\n        style.boxShadow = '0 1px 3px rgba(100, 220, 100, 0.3)';\n        break;\n      case 'roomBlock':\n        style.backgroundColor = 'rgb(235, 235, 235)';  // Light gray\n        style.boxShadow = '0 1px 3px rgba(200, 200, 200, 0.3)';\n        break;\n      default:\n        return {};\n    }\n    \n    // Add border radius for start and end dates\n    if (isStart) {\n      style.borderTopLeftRadius = '4px';\n      style.borderBottomLeftRadius = '4px';\n      style.borderLeft = '1px solid ' + style.backgroundColor;\n    }\n    \n    if (isEnd) {\n      style.borderTopRightRadius = '4px';\n      style.borderBottomRightRadius = '4px';\n      style.borderRight = '1px solid ' + style.backgroundColor;\n    }\n    \n    // Remove right border if continuing to next day\n    if (!isEnd) {\n      style.borderRight = 'none';\n    }\n    \n    // Remove left border if continuing from previous day\n    if (!isStart && hasContinuingReservation(propertyId, day.date)) {\n      style.borderLeft = 'none';\n    }\n    \n    return style;\n  };\n\n  // Open property detail modal\n  const openPropertyModal = (property) => {\n    setSelectedPropertyData(property);\n    setShowModal(true);\n  };\n\n  // Close property detail modal\n  const closePropertyModal = () => {\n    setShowModal(false);\n  };\n\n  // Handle selection modal submission\n  const handleSelectionSubmit = (type) => {\n    alert(`${selectionRange.propertyId}の${formatDateForDisplay(selectionRange.startDate)}から${formatDateForDisplay(selectionRange.endDate)}まで、「${type === 'reservation' ? '予約' : type === 'cleaning' ? '清掃' : '部屋止め'}」として登録します。`);\n    setShowSelectionModal(false);\n  };\n\n  // Simulate drag and drop behavior\n  const [dragStart, setDragStart] = useState(null);\n  const [currentDrag, setCurrentDrag] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleCellMouseDown = (propertyId, date, hasEvent) => {\n    // 予約や清掃、部屋止めが入っている場合は何もしない\n    if (hasEvent) return;\n    \n    setDragStart({ propertyId, date });\n    setCurrentDrag({ propertyId, date });\n    setIsDragging(true);\n  };\n\n  const handleCellMouseOver = (propertyId, date, hasEvent) => {\n    // 予約や清掃、部屋止めが入っている場合は何もしない\n    if (hasEvent) return;\n    \n    if (isDragging && dragStart && dragStart.propertyId === propertyId) {\n      setCurrentDrag({ propertyId, date });\n    }\n  };\n\n  const handleCellMouseUp = (hasEvent) => {\n    // 予約や清掃、部屋止めが入っている場合は何もしない\n    if (hasEvent) {\n      setDragStart(null);\n      setCurrentDrag(null);\n      setIsDragging(false);\n      return;\n    }\n    \n    if (dragStart && currentDrag && dragStart.propertyId === currentDrag.propertyId) {\n      const startDate = new Date(Math.min(dragStart.date, currentDrag.date));\n      const endDate = new Date(Math.max(dragStart.date, currentDrag.date));\n      \n      // 選択範囲内に予定が入っていないか確認\n      const hasEventInRange = reservations.some(res => {\n        const resStart = new Date(res.startDate);\n        const resEnd = new Date(res.endDate);\n        \n        return res.propertyId === dragStart.propertyId && \n               ((resStart >= startDate && resStart <= endDate) || \n                (resEnd >= startDate && resEnd <= endDate) ||\n                (resStart <= startDate && resEnd >= endDate));\n      });\n      \n      if (!hasEventInRange) {\n        setSelectionRange({\n          propertyId: dragStart.propertyId,\n          startDate: startDate,\n          endDate: endDate\n        });\n        \n        setShowSelectionModal(true);\n      }\n    }\n    \n    setDragStart(null);\n    setCurrentDrag(null);\n    setIsDragging(false);\n  };\n\n  // Check if a cell is in the current drag selection\n  const isInDragSelection = (propertyId, date) => {\n    if (!isDragging || !dragStart || !currentDrag || dragStart.propertyId !== propertyId) {\n      return false;\n    }\n    \n    const dateValue = date.getTime();\n    const startValue = dragStart.date.getTime();\n    const currentValue = currentDrag.date.getTime();\n    \n    return (dateValue >= Math.min(startValue, currentValue) && \n            dateValue <= Math.max(startValue, currentValue));\n  };\n\n  // Property Detail Modal Component\n  const PropertyDetailModal = ({ property, onClose }) => {\n    if (!property) return null;\n    \n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <div className=\"flex justify-between items-center p-6 border-b\">\n            <h2 className=\"text-2xl font-bold text-gray-800\">{property.name}</h2>\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div className=\"p-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-700\">基本情報</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">物件名</span>\n                    <span>{property.name}</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">契約形態</span>\n                    <span>{property.contractType}</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">取引態様</span>\n                    <span>{property.transactionType}</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">物件種別</span>\n                    <span>{property.propertyType}</span>\n                  </div>\n                </div>\n                \n                <h3 className=\"text-lg font-semibold mt-6 mb-4 text-gray-700\">部屋情報</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">間取り</span>\n                    <span>{property.layout}</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">階数</span>\n                    <span>{property.floor}</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span className=\"w-32 text-gray-600\">部屋の向き</span>\n                    <span>{property.direction}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-700\">物件画像</h3>\n                <img src={property.image} alt={property.name} className=\"w-full h-auto rounded-lg shadow-md\" />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"p-6 border-t bg-gray-50\">\n            <div className=\"flex justify-end\">\n              <button \n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition duration-150\"\n              >\n                閉じる\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  // Selection Modal Component\n  const SelectionModal = ({ range, onClose, onSubmit }) => {\n    if (!range) return null;\n    \n    const property = properties.find(p => p.id === range.propertyId);\n    \n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md overflow-hidden transform transition-all\">\n          <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white px-6 py-4\">\n            <h3 className=\"text-lg font-semibold\">予定の登録</h3>\n          </div>\n          \n          <div className=\"p-6\">\n            <div className=\"mb-4\">\n              <p className=\"text-gray-600 mb-1\">物件</p>\n              <p className=\"font-medium text-gray-800\">{property ? property.name : range.propertyId}</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <p className=\"text-gray-600 mb-1\">期間</p>\n              <p className=\"font-medium text-gray-800\">\n                {formatDateForDisplay(range.startDate)} 〜 {formatDateForDisplay(range.endDate)}\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-3 gap-3\">\n              <button \n                className=\"flex flex-col items-center justify-center p-4 border border-pink-300 bg-white text-pink-500 rounded-lg hover:bg-pink-50 transition-colors focus:outline-none focus:ring-2 focus:ring-pink-300 focus:ring-opacity-50\"\n                onClick={() => onSubmit('reservation')}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                <span className=\"text-sm\">予約</span>\n              </button>\n              \n              <button \n                className=\"flex flex-col items-center justify-center p-4 border border-green-300 bg-white text-green-500 rounded-lg hover:bg-green-50 transition-colors focus:outline-none focus:ring-2 focus:ring-green-300 focus:ring-opacity-50\"\n                onClick={() => onSubmit('cleaning')}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                <span className=\"text-sm\">清掃</span>\n              </button>\n              \n              <button \n                className=\"flex flex-col items-center justify-center p-4 border border-gray-300 bg-white text-gray-500 rounded-lg hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-opacity-50\"\n                onClick={() => onSubmit('roomBlock')}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span className=\"text-sm\">部屋止め</span>\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"px-6 py-3 bg-gray-50 text-right\">\n            <button \n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-500 hover:text-gray-700 transition-colors\"\n            >\n              キャンセル\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"px-6 py-3 bg-white border-b border-gray-200 shadow\">\n        <div className=\"flex items-center justify-between max-w-full mx-auto\">\n          <div className=\"flex items-center\">\n            <div className=\"font-bold text-3xl\" style={{ color: '#ff6600' }}>\n              BraTTo\n              <span className=\"ml-2 text-sm text-gray-600 font-normal\">マンスリー予約管理システム</span>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <a href=\"#\" className=\"px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-md transition duration-150 group\">\n              <span className=\"group-hover:text-orange-500 transition-colors\">お問合せ</span>\n            </a>\n            <a href=\"#\" className=\"px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-md transition duration-150 group\">\n              <span className=\"group-hover:text-orange-500 transition-colors\">稼働表</span>\n            </a>\n            <div className=\"px-4 py-2 text-gray-700\">\n              株式会社BraTTo<br />\n              <span className=\"text-sm text-gray-500\">村上</span>\n            </div>\n            <button className=\"p-2 text-gray-700 hover:bg-gray-100 rounded-full transition duration-150 hover:text-orange-500\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n            <button className=\"p-2 text-gray-700 hover:bg-gray-100 rounded-full transition duration-150 hover:text-orange-500\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Navigation */}\n      <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-20\">\n        <div className=\"max-w-full mx-auto px-4\">\n          <div className=\"flex space-x-1\">\n            <button className=\"px-6 py-4 font-medium border-b-2 border-orange-500 text-orange-500 relative after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-orange-500\">\n              予約・契約管理\n            </button>\n            <button className=\"px-6 py-4 text-gray-600 hover:text-gray-900 hover:bg-orange-50 transition-all\">\n              物件・料金管理\n            </button>\n            <button className=\"px-6 py-4 text-gray-600 hover:text-gray-900 hover:bg-orange-50 transition-all\">\n              顧客管理\n            </button>\n            <button className=\"px-6 py-4 text-gray-600 hover:text-gray-900 hover:bg-orange-50 transition-all\">\n              請求・入金管理\n            </button>\n            <button className=\"px-6 py-4 text-gray-600 hover:text-gray-900 hover:bg-orange-50 transition-all\">\n              収支・分析\n            </button>\n            <button className=\"px-6 py-4 text-gray-600 hover:text-gray-900 hover:bg-orange-50 transition-all\">\n              提携サービス\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main content */}\n      <main className=\"flex-1 max-w-full mx-auto px-6 py-8\">\n        {/* Controls */}\n        <div className=\"mb-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-800\">物件別稼働表</h1>\n          <div className=\"flex space-x-3\">\n            <button className=\"px-5 py-2.5 text-white rounded-lg shadow hover:bg-pink-200 transition-all transform hover:-translate-y-0.5\" style={{ backgroundColor: 'rgb(255, 165, 165)' }}>\n              <span className=\"flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                予約\n              </span>\n            </button>\n            <button className=\"px-5 py-2.5 bg-white text-green-500 border border-green-300 rounded-lg shadow hover:bg-green-50 transition-all transform hover:-translate-y-0.5\">\n              <span className=\"flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                清掃\n              </span>\n            </button>\n            <button className=\"px-5 py-2.5 bg-white text-gray-600 border border-gray-300 rounded-lg shadow hover:bg-gray-50 transition-all transform hover:-translate-y-0.5\">\n              <span className=\"flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                部屋止め\n              </span>\n            </button>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"mb-6 grid grid-cols-4 gap-4\">\n          <div className=\"col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">エリア</label>\n            <div className=\"relative\">\n              <select \n                className=\"block w-full py-2.5 px-3 border border-gray-300 bg-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 appearance-none\"\n                value={selectedArea}\n                onChange={(e) => setSelectedArea(e.target.value)}\n              >\n                <option value=\"すべて\">すべて</option>\n                {areas.map(area => (\n                  <option key={area} value={area}>{area}</option>\n                ))}\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">物件名</label>\n            <div className=\"relative\">\n              <select \n                className=\"block w-full py-2.5 px-3 border border-gray-300 bg-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 appearance-none\"\n                value={selectedProperty}\n                onChange={(e) => setSelectedProperty(e.target.value)}\n              >\n                <option value=\"すべて\">すべて</option>\n                {filteredProperties.map(property => (\n                  <option key={property.id} value={property.id}>{property.name}</option>\n                ))}\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">期間</label>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"relative flex-1\">\n                <input \n                  type=\"date\" \n                  className=\"block w-full py-2.5 px-3 border border-gray-300 bg-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n                  value={startDate}\n                  onChange={(e) => setStartDate(e.target.value)}\n                />\n              </div>\n              <span className=\"text-gray-500\">〜</span>\n              <div className=\"relative flex-1\">\n                <input \n                  type=\"date\" \n                  className=\"block w-full py-2.5 px-3 border border-gray-300 bg-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Calendar controls */}\n        <div className=\"mb-4 flex justify-between items-center\">\n          <button \n            onClick={goToPreviousMonth}\n            className=\"flex items-center justify-center w-10 h-10 text-gray-600 hover:text-orange-500 hover:bg-orange-50 rounded-full transition-colors\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          \n          <h2 className=\"text-xl font-semibold text-gray-800 flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-orange-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\" />\n            </svg>\n            <span>{currentMonth.getFullYear()}年 {currentMonth.getMonth() + 1}月</span>\n          </h2>\n          \n          <button \n            onClick={goToNextMonth}\n            className=\"flex items-center justify-center w-10 h-10 text-gray-600 hover:text-orange-500 hover:bg-orange-50 rounded-full transition-colors\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Calendar view */}\n        <div className=\"overflow-x-auto rounded-xl shadow-lg bg-white\">\n          <div className=\"min-w-max\">\n            {/* Calendar header - sticky to the top */}\n            <div className=\"flex border-b sticky top-0 z-10\">\n              <div className=\"w-64 py-2 px-4 font-medium text-gray-700 bg-gray-50 border-r sticky left-0 z-20\">\n                物件名\n              </div>\n              <div className=\"w-12 py-2 px-1 font-medium text-gray-700 text-center bg-gray-50 border-r sticky top-0\">\n                ID\n              </div>\n              <div className=\"flex-1 flex sticky top-0 z-10\">\n                {days.map((day, i) => (\n                  <div \n                    key={i} \n                    className={`w-8 py-1 px-0.5 text-center border-r ${\n                      day.weekday === '土' ? 'bg-gray-50 text-gray-700' : \n                      day.weekday === '日' ? 'bg-gray-50 text-red-500' : \n                      'bg-gray-50 text-gray-700'\n                    } font-medium sticky top-0`}\n                  >\n                    {day.day}\n                    <div className={`text-xs ${\n                      day.weekday === '土' ? 'text-gray-500' : \n                      day.weekday === '日' ? 'text-red-500' : \n                      'text-gray-500'\n                    }`}>\n                      {day.weekday}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Group properties by area */}\n            {areas.map(area => {\n              const areaProperties = filteredProperties.filter(p => p.area === area);\n              if (areaProperties.length === 0) return null;\n              \n              return (\n                <div key={area} className=\"border-b\">\n                  {/* Area header */}\n                  <div className=\"flex bg-orange-50\">\n                    <div className=\"w-64 py-1.5 px-4 font-semibold text-orange-600 sticky left-0 z-10 flex items-center\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      </svg>\n                      {area}\n                    </div>\n                    <div className=\"w-12 py-1.5 px-1\"></div>\n                    <div className=\"flex-1\"></div>\n                  </div>\n                  \n                  {/* Properties in this area */}\n                  {areaProperties.map((property, propertyIndex) => (\n                    <div key={property.id} className={`flex hover:bg-gray-50 ${propertyIndex % 2 === 0 ? 'bg-white' : 'bg-gray-50'} group`}>\n                      <div \n                        className=\"w-64 py-1.5 px-4 border-r border-gray-200 cursor-pointer hover:text-orange-500 sticky left-0 z-10 bg-inherit flex items-center group-hover:bg-gray-50 text-sm\"\n                        onClick={() => openPropertyModal(property)}\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-2 text-gray-400 group-hover:text-orange-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                        </svg>\n                        {property.name}\n                      </div>\n                      <div className=\"w-12 py-1.5 px-1 border-r border-gray-200 text-center text-gray-500 text-xs\">\n                        {property.id}\n                      </div>\n                      <div className=\"flex-1 flex\">\n                        {days.map((day, i) => {\n                          const status = getCellStatus(property.id, day.date);\n                          const style = getCellStyle(property.id, day);\n                          const inDragSelection = isInDragSelection(property.id, day.date);\n                          \n                          return (\n                            <div \n                              key={i} \n                              className={`w-8 h-6 ${status ? 'cursor-default' : 'cursor-pointer'} ${!status ? 'border-r border-b border-gray-200' : ''} transition-all duration-200`}\n                              style={inDragSelection ? { \n                                backgroundColor: 'rgba(255, 192, 192, 0.4)',\n                                boxShadow: 'inset 0 0 0 1px rgba(255, 165, 165, 0.6)'\n                              } : style}\n                              onMouseDown={() => handleCellMouseDown(property.id, day.date, !!status)}\n                              onMouseOver={() => handleCellMouseOver(property.id, day.date, !!status)}\n                              onMouseUp={() => handleCellMouseUp(!!status)}\n                            >\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Legend */}\n        <div className=\"mt-6 flex items-center p-4 bg-white rounded-lg shadow\">\n          <div className=\"flex items-center mr-8\">\n            <div className=\"w-5 h-5 mr-2 rounded-md\" style={{ backgroundColor: 'rgb(255, 165, 165)', boxShadow: '0 1px 3px rgba(255, 105, 105, 0.3)' }}></div>\n            <span className=\"text-sm text-gray-700\">予約</span>\n          </div>\n          <div className=\"flex items-center mr-8\">\n            <div className=\"w-5 h-5 mr-2 rounded-md\" style={{ backgroundColor: 'rgb(200, 255, 200)', boxShadow: '0 1px 3px rgba(100, 220, 100, 0.3)' }}></div>\n            <span className=\"text-sm text-gray-700\">清掃</span>\n          </div>\n          <div className=\"flex items-center mr-8\">\n            <div className=\"w-5 h-5 mr-2 rounded-md\" style={{ backgroundColor: 'rgb(235, 235, 235)', boxShadow: '0 1px 3px rgba(200, 200, 200, 0.3)' }}></div>\n            <span className=\"text-sm text-gray-700\">部屋止め</span>\n          </div>\n          <div className=\"flex-1 text-right text-sm text-gray-500\">\n            ※カレンダー上でドラッグ＆ドロップして日付範囲を選択できます\n          </div>\n        </div>\n      </main>\n\n      {/* Property Detail Modal */}\n      {showModal && (\n        <PropertyDetailModal \n          property={selectedPropertyData} \n          onClose={closePropertyModal} \n        />\n      )}\n      \n      {/* Selection Modal */}\n      {showSelectionModal && (\n        <SelectionModal \n          range={selectionRange}\n          onClose={() => setShowSelectionModal(false)}\n          onSubmit={handleSelectionSubmit}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BrattoPropertySystem;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}